# join to blocks by taking average pop density per block
block_bg_join <- st_join(select(blocks, block_id), select(pop_bg_17, GEOID, pop_dens))
View(block_bg_join)
View(block_bg_join)
# join to blocks by taking average pop density per block
block_bg_join <- st_join(select(blocks, block_id), select(pop_bg_17, GEOID, pop_dens)) %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(pop_dens = average(pop_dens))
# join to blocks by taking average pop density per block
block_bg_join <- st_join(select(blocks, block_id), select(pop_bg_17, GEOID, pop_dens)) %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(pop_dens = mean(pop_dens))
block_bg_join <- block_bg_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(pop_dens = mean(pop_dens))
View(block_bg_join)
block_bg_join <- block_bg_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(pop_dens = mean(as.numeric(pop_dens)))
# join to blocks by taking average pop density per block
block_bg_join <- st_join(select(blocks, block_id), select(pop_bg_17, GEOID, pop_dens)) %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(pop_dens = mean(as.numeric(pop_dens)))
# join to block dataset
blocks <- left_join(blocks, block_bg_join)
summary(blocks$pop_dens)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
# create some pop density-sensitive variables
blocks <- blocks %>%
mutate(rat_nn10_log_pop_dens = rat_nn10_log / pop_dens,
hotspot_dist_log_pop_dens = hotspot_dist_log / pop_dens)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
# create some pop density-sensitive variables
blocks <- blocks %>%
mutate(rat_nn10_log_pop_dens = rat_nn10_log / pop_dens,
rat_nn5_pop_dens = rat_nn5 / pop_dens,
hotspot_dist_pop_dens = hotspot_dist / pop_dens,
hotspot_dist_log_pop_dens = hotspot_dist_log / pop_dens)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
ggplot() +
geom_sf(data = blocks, aes(fill = pop_dens), color = NA) +
viridis::scale_fill_viridis() +
labs(title = "Population Density by City Block") +
mapTheme()
ggplot() +
geom_sf(data = blocks, aes(fill = hotspot_dist_log), color = NA) +
viridis::scale_fill_viridis() +
labs(title = "Log of Distance to Nearest Hotspot by City Block") +
mapTheme()
ggplot() +
geom_sf(data = blocks, aes(fill = hotspot_dist_log_pop_dens), color = NA) +
viridis::scale_fill_viridis() +
labs(title = "Log of Distance to Nearest Hotspot Divided by Pop Density by City Block") +
mapTheme()
# save out for later use
save(blocks, file = "./data/city_blocks_dist_vars.Rdata")
load("data/city_blocks_dist_vars.Rdata")
# ------------------------------------------------------------------------------
# load Kate's variables
load("data/block2.Rdata")
View(block_dat.sf)
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres)
library(tidyverse)
library(tidycensus)
library(sf)
library(lubridate)
library(spdep)
library(gridExtra)
library(FNN)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres)
# join
blocks <- left_join(blocks, kate_vars)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# load rat data
rats <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LONGITUDE","LATITUDE"),crs=4326) %>%
st_transform('ESRI:102685') %>%
mutate(month = month(ymd_hms(SERVICEORDERDATE)),
year = year(ymd_hms(SERVICEORDERDATE)))
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
View(blocks)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id, -area_acres) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
correlation.long <-
st_drop_geometry(blocks) %>%
mutate(area_acres = as.numeric(area_acres),
area_acres_log = as.numeric(area_acres_log)) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
View(correlation.long)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres)
# join
blocks <- left_join(blocks, kate_vars)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres)
# join
blocks <- inner_join(blocks, kate_vars)
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct(block_id)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct(block_id)
# join
blocks <- inner_join(blocks, kate_vars)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
mutate(area_acres = as.numeric(area_acres),
area_acres_log = as.numeric(area_acres_log)) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
View(kate_vars)
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct()
View(kate_vars)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct()
# join
blocks <- inner_join(blocks, kate_vars)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
mutate(area_acres = as.numeric(area_acres),
area_acres_log = as.numeric(area_acres_log)) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
glimpse(blocks)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id, -area_acres, -area_acres_log) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id) %>%
gather(Variable, Value, -rats_found_count)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
View(blocks)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct()
# join
blocks <- inner_join(blocks, kate_vars)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
View(blocks)
hist(blocks$rats_found_count)
table(blocks$rats_found_yn)
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# load Kate's variables
load("data/block2.Rdata")
kate_vars <- block_dat.sf %>%
st_drop_geometry() %>%
select(-ward_name.x, -ward_name.y, -ward_pop_15.x, -ward_pop_15.y, -inspection_count,
-rats_found_yn, -rats_found_count, -area_acres) %>%
distinct()
# join
blocks <- inner_join(blocks, kate_vars)
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
rats_found_count_pop_normalized = rats_found_count / pop_dens,
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id, -rats_found_count) %>%
gather(Variable, Value, -rats_found_count_pop_normalized)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count_pop_normalized, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
ggplot(correlation.long, aes(Value, rats_found_count_pop_normalized)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
# ------------------------------------------------------------------------------
# load my variables
load("data/city_blocks_dist_vars.Rdata")
# join rat obs to blocks
rats_block_join <- st_join(rats, blocks)
# count observations per block for mapping
blocks <- left_join(blocks, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
rats_found_count_pop_normalized = rats_found_count / pop_dens,
area_acres = as.numeric(st_area(.)) / 43560)
correlation.long <-
st_drop_geometry(blocks) %>%
dplyr::select(-block_id, -rats_found_count) %>%
gather(Variable, Value, -rats_found_count_pop_normalized)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, rats_found_count_pop_normalized, use = "complete.obs"))
ggplot(correlation.long, aes(Value, rats_found_count_pop_normalized)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Rats Observed per block as a function of spatial varaibles") +
plotTheme()
ggplot() +
geom_sf(data = blocks, aes(fill = pop_dens), color = NA) +
viridis::scale_fill_viridis() +
labs(title = "Population Density by City Block") +
mapTheme()

gather(Variable, Value, -Race) %>%
ggplot(aes(Variable, Value, fill = Race)) +
geom_bar(aes(fill = Race), position = "dodge", stat = "identity") +
scale_fill_manual(values = palette_3_colors) +
labs(title="Confusion matrix rates by race",
subtitle = "50% threshold", x = "Outcome",y = "Rate") +
plotTheme() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# TODO: set up this graph with new equitable threshold based on above
thresh_equitable <- filter(testProbs.thresholds, Threshold == .3)  %>%
dplyr::select(Accuracy, Race, starts_with("Rate")) %>%
gather(Variable, Value, -Race) %>%
ggplot(aes(Variable, Value, fill = Race)) +
geom_bar(aes(fill = Race), position = "dodge", stat = "identity") +
scale_fill_manual(values = palette_3_colors) +
labs(title="Confusion matrix rates by race",
subtitle = "50% threshold", x = "Outcome",y = "Rate") +
plotTheme() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(thresh_50, thresh_equitable)
?grid.arrange
grid.arrange(thresh_50, thresh_equitable, ncol = 2)
getwd()
setwd("C:/Users/henry/Documents/HFdocs/Penn/Spring_2023/MUSA7900_Practicum/musa-rats/")
# Import libraries
library(tidyverse)
library(sf)
## Rats to blocks
Rats2blocks <- read.csv("./notebooks/data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=102685)
Rats2blocks <- read.csv("/data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=102685)
getwd()
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=102685)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = 102685)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = EPSG:6487)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = 6487)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = "EPSG:6487")
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = "ESRI:102685")
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs="ESRI:102685")
## Ward
Ward <- st_read("./notebooks/data/Wards.geojson") %>%
st_transform('ESRI:102685')
Ward <- st_read("./data/Wards.geojson") %>%
st_transform('ESRI:102685')
ggplot() +
geom_sf(data = Rats2blocks)
ggplot() +
geom_sf(data = Ward) +
geom_sf(data = Rats2blocks)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LATITUDE","LONGITUDE"),crs=4326) %>% st_transform(crs = "ESRI:102685")
ggplot() +
geom_sf(data = Ward) +
geom_sf(data = Rats2blocks)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LONGITUDE","LATITUDE"),crs=4326) %>% st_transform(crs = "ESRI:102685")
ggplot() +
geom_sf(data = Ward) +
geom_sf(data = Rats2blocks)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LONGITUDE","LATITUDE"),crs="ESRI:102685")
ggplot() +
geom_sf(data = Ward) +
geom_sf(data = Rats2blocks)
Rats2blocks <- read.csv("./data/rats_to_blocks.csv.gz", header = TRUE) %>%
na.omit() %>%
st_as_sf(.,coords=c("LONGITUDE","LATITUDE"),crs=4326) %>% st_transform(crs = "ESRI:102685")
ggplot() +
geom_sf(data = Ward) +
geom_sf(data = Rats2blocks)
View(Rats2blocks)
options(scipen=999)
View(Rats2blocks)
library(tidyverse)
library(sf)
centerlines <- st_read("data/Street_Centerlines_2013.geojson")
centerlines <- st_read("data/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685")
rats <- read.csv("data/rats_to_blocks.csv.gz") %>%
st_as_sf(. ,coords = c("LONGITUDE","LATITUDE"), crs = 4326) %>%
st_transform(crs = "ESRI:102685")
rats <- read.csv("data/rats_to_blocks.csv.gz") %>%
na.omit() %>%
st_as_sf(. ,coords = c("LONGITUDE","LATITUDE"), crs = 4326) %>%
st_transform(crs = "ESRI:102685")
mapview::mapview(centerlines) + mapview::mapview(rats)
library(mapview)
mapviewOptions(fgb = TRUE)
mapview(centerlines) + mapview(rats)
mapviewOptions(fgb = FALSE)
mapview(centerlines) + mapview(rats)
ggplot() +
geom_sf(centerlines) +
geom_sf(rats)
ggplot() +
geom_sf(data = centerlines) +
geom_sf(data = rats)
centerlines <- st_read("data/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685") %>%
filter(ROADTYPE == "Street")
ggplot() +
geom_sf(data = centerlines) +
geom_sf(data = rats)
?st_cast
centerlines_pg <- st_cast(centerlines, to = "MULTIPOLYGON")
centerlines
library(tidyverse)
library(sf)
library(mapview)
mapviewOptions(fgb = FALSE)
centerlines <- st_read("data/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685") %>%
filter(ROADTYPE == "Street")
st_write(centerlines, "data/Street_Centerlines_2013/Street_Centerlines_2013.shp")
?st_polygonize
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_polygonize(centerlines)
st_write(centerlines_pg, "data/Street_Centerlines_2013/centerlines_pg.shp")
st_write(st_cast(centerlines_pg, "POLYGON"), "data/Street_Centerlines_2013/centerlines_pg.shp")
mapview(centerlines_pg)
?st_cast
mapview(st_cast(centerlines_pg, "MULTIPOLYGON"))
mapview(st_cast(centerlines_pg, TO ="MULTIPOLYGON"))
mapview(st_cast(centerlines_pg, to ="MULTIPOLYGON"))
test <- st_collection_extract(centerlines_pg, "POLYGON")
test <- st_collection_extract(centerlines_pg, "LINESTRING")
View(centerlines_pg)
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_union(centerlines)
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_polygonize(st_union(centerlines))
mapview(centerlines_pg)
View(centerlines_pg)
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_cast(st_union(centerlines), "POLYGON")
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_cast(st_union(centerlines), "MUTLIPOLYGON")
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_cast(centerlines, "MUTLIPOLYGON")
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_cast(centerlines, "MULTIPOLYGON")
#TODO: figure out how to cast linestrings to polygons
centerlines_pg <- st_collection_extract(st_polygonize(st_union(centerlines)))
st_write(centerlines_pg, "data/Street_Centerlines_2013/centerlines_pg.shp")
View(centerlines_pg)
ggplot() +
geom_sf(data = centerlines, fill = "transparent") +
geom_sf(data = rats)
rats <- read.csv("data/rats_to_blocks.csv.gz") %>%
na.omit() %>%
st_as_sf(. ,coords = c("LONGITUDE","LATITUDE"), crs = 4326) %>%
st_transform(crs = "ESRI:102685")
ggplot() +
geom_sf(data = centerlines, fill = "transparent") +
geom_sf(data = rats)
# convert street centerlines to block polygons
centerlines_pg <- st_cast(st_collection_extract(st_polygonize(st_union(centerlines))), "POLYGON")
View(centerlines_pg)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines))))
View(centerlines_pg)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(fid = row_number())
View(centerlines_pg)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(fid = row_number()) %>%
st_as_sf()
st_crs(centerlines_pg)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
View(rats_block_join)
# count observations per block for mapping
centerlines_pg <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(rat_count = n()))
View(centerlines_pg)
?replace_na
View(centerlines_pg)
# count observations per block for mapping
centerlines_pg <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(rat_count = n())) %>%
replace_na(rat_count, 0)
# count observations per block for mapping
centerlines_pg <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(rat_count = n())) %>%
mutate(rat_count= replace_na(rat_count, 0))
ggplot() +
geom_sf(data = centerlines_pg, fill = rat_count)
ggplot() +
geom_sf(data = centerlines_pg, aes(fill = rat_count))
ggplot() +
geom_sf(data = centerlines_pg, aes(fill = rat_count), color = "transparent")
ggplot() +
geom_sf(data = centerlines_pg, aes(fill = rat_count), color = "transparent") +
scale_fill_viridis()
ggplot() +
geom_sf(data = centerlines_pg, aes(fill = rat_count), color = "transparent") +
scale_fill_viridis_b()
ggplot() +
geom_sf(data = centerlines_pg, aes(fill = rat_count), color = "transparent") +
scale_fill_continuous()
library(tidyverse)
library(sf)
library(mapview)
# load street centerlines from DC open data
centerlines <- st_read("data/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685") %>%
filter(ROADTYPE == "Street")
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# load rat infestation dataset and spatialize
rats <- read.csv("data/rats_to_blocks.csv.gz") %>%
na.omit() %>%
st_as_sf(. ,coords = c("LONGITUDE","LATITUDE"), crs = 4326) %>%
st_transform(crs = "ESRI:102685")
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
getwd()
# load street centerlines from DC open data
centerlines <- st_read("./data/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685") %>%
filter(ROADTYPE == "Street")
# load street centerlines from DC open data
centerlines <- st_read("./data/Street_Centerlines_2013/Street_Centerlines_2013.geojson") %>%
st_transform("ESRI:102685") %>%
filter(ROADTYPE == "Street")
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# load rat infestation dataset and spatialize
rats <- read.csv("./data/rats_to_blocks.csv.gz") %>%
na.omit() %>%
st_as_sf(. ,coords = c("LONGITUDE","LATITUDE"), crs = 4326) %>%
st_transform(crs = "ESRI:102685")
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
# count observations per block for mapping
centerlines_pg <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(rat_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0))) %>%
mutate(rat_count = replace_na(rat_count, 0),
area = st_area(.))
View(centerlines_pg)
View(rats_block_join)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(rat_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area = st_area(.))
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area = st_area(.))
ggplot() +
geom_sf(data = block_dat, aes(fill = rat_count), color = "transparent")
ggplot() +
geom_sf(data = block_dat, aes(fill = inspection_count), color = "transparent")
# rats found y/n
ggplot() +
geom_sf(data = block_dat, aes(fill = rats_found_yn), color = "transparent")
# count of rats found
ggplot() + geom_sf(data = block_dat, aes(fill = rats_found_count), color = "transparent")
# block size
ggplot() + geom_sf(data = block_dat, aes(fill = area), color = "transparent")
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area = as.numeric(st_area(.)))
# block size
ggplot() + geom_sf(data = block_dat, aes(fill = area), color = "transparent")
View(block_dat)
# wards
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685")
# wards
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685") %>%
select(NAME)
# join wards to centerline polygons
centerlines_pg <- st_join(centerlines_pg, wards)
# wards
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685") %>%
select(ward_name = NAME)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# join wards to centerline polygons
centerlines_pg <- st_join(centerlines_pg, wards)
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area = as.numeric(st_area(.)))
# rat id rate (count of rats found / number of inspections)
ggplot() + geom_sf(data = block_dat, aes(fill = rats_found_count / inspection_count), color = "transparent")
# number of inspections
ggplot() + geom_sf(data = block_dat, aes(fill = inspection_count), color = "transparent")
# rat id rate (count of rats found / number of inspections)
ggplot() + geom_sf(data = block_dat, aes(fill = rats_found_count / inspection_count), color = "transparent")
# distribution of block size
ggplot() + geom_density(data = block_dat, aes(area))
options(scipen=999)
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area = st_area(.))
View(block_dat)
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
View(block_dat)
View(block_dat)
# block size
ggplot() + geom_sf(data = block_dat, aes(fill = area), color = "transparent")
# block size
ggplot() + geom_sf(data = block_dat, aes(fill = area_acres), color = "transparent")
# distribution of block size
ggplot() + geom_density(data = block_dat, aes(area_acres))
# distribution of block size
ggplot() + geom_density(data = block_dat %>% filter(area_acres < 100), aes(area_acres))
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent")
# inspections by ward bar chart
ggplot() + geom_bar(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(y = inspections, x = ward))
# inspections by ward bar chart
ggplot() + geom_bar(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(y = inspections, x = ward_name))
# inspections by ward bar chart
ggplot() + geom_bar(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(y = inspections, x = ward_name), stat = "identity")
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent") +
geom_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections))
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent") +
geom_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent") +
geom_text_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent") +
geom_sf_label(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# inspections by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = inspections), color = "transparent") +
geom_sf_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# rat id rate by ward mapped
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(fill = rats_found_count / inspections), color = "transparent") +
geom_sf_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# rat id rate by ward mapped
ggplot() + geom_sf(data = block_dat %>%
group_by(ward_name) %>%
summarize(inspections = sum(inspection_count),
rats_found_count = sum(rats_found_count)) %>%
mutate(rats_found_rate = rats_found_count / inspections),
aes(fill = rats_found_rate), color = "transparent") +
geom_sf_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685")
# wards
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685") %>%
select(ward_name = NAME,
pop15 = POP_2011_2015)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# join wards to centerline polygons
centerlines_pg <- st_join(centerlines_pg, wards)
# wards
wards <- st_read("./data/Wards.geojson") %>%
st_transform("ESRI:102685") %>%
select(ward_name = NAME,
ward_pop_15 = POP_2011_2015)
# convert street centerlines to block polygons
centerlines_pg <- as.data.frame(st_collection_extract(st_polygonize(st_union(centerlines)))) %>%
mutate(block_id = row_number()) %>%
st_as_sf()
# join wards to centerline polygons
centerlines_pg <- st_join(centerlines_pg, wards)
# spatial join to assign each rat datapoint to a block polygon
rats_block_join <- st_join(rats, centerlines_pg)
# count observations per block for mapping
block_dat <- left_join(centerlines_pg, rats_block_join %>%
st_drop_geometry() %>%
group_by(block_id) %>%
summarize(inspection_count = n(),
rats_found_yn = ifelse(1 %in% activity, 1, 0),
rats_found_count = sum(activity))) %>%
mutate(inspection_count = replace_na(inspection_count, 0),
rats_found_yn = replace_na(rats_found_yn, 0),
rats_found_count = replace_na(rats_found_count, 0),
area_acres = as.numeric(st_area(.)) / 43560)
# inspections per person by ward
ggplot() + geom_sf(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count),
pop15 = first(ward_pop_15)),
aes(fill = inspections / pop15), color = "transparent") +
geom_sf_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
# rats found per person by ward
ggplot() + geom_sf(data = block_dat %>%
group_by(ward_name) %>%
summarize(inspections = sum(inspection_count),
rats_found_count = sum(rats_found_count),
pop15 = first(ward_pop_15)) %>%
mutate(rats_found_rate = rats_found_count / inspections),
aes(fill = rats_found_count / pop15), color = "transparent") +
geom_sf_text(data = block_dat %>% group_by(ward_name) %>% summarize(inspections = sum(inspection_count)),
aes(label = ward_name))
